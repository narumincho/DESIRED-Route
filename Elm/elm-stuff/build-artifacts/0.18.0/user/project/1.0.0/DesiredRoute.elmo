var _user$project$DesiredRoute$bg = A2(
	_elm_lang$core$List$map,
	function (_p0) {
		var _p1 = _p0;
		return A2(
			_elm_lang$svg$Svg$image,
			{
				ctor: '::',
				_0: _elm_lang$svg$Svg_Attributes$xlinkHref('image/bg.png'),
				_1: {
					ctor: '::',
					_0: _elm_lang$svg$Svg_Attributes$height('1'),
					_1: {
						ctor: '::',
						_0: _elm_lang$svg$Svg_Attributes$width('1'),
						_1: {
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(_p1._0)),
							_1: {
								ctor: '::',
								_0: _elm_lang$svg$Svg_Attributes$y(
									_elm_lang$core$Basics$toString(_p1._1)),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			},
			{ctor: '[]'});
	},
	A2(
		_elm_lang$core$List$concatMap,
		function (x) {
			return A2(
				_elm_lang$core$List$map,
				function (y) {
					return {ctor: '_Tuple2', _0: x, _1: y};
				},
				A2(_elm_lang$core$List$range, 0, 8));
		},
		A2(_elm_lang$core$List$range, 0, 15)));
var _user$project$DesiredRoute$view = function (model) {
	var _p2 = model;
	switch (_p2.ctor) {
		case 'TitleMode':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('elm-root'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Title Mode'),
					_1: {ctor: '[]'}
				});
		case 'SearchMode':
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('elm-root'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$svg$Svg$svg,
						{
							ctor: '::',
							_0: _elm_lang$svg$Svg_Attributes$viewBox('0 0 16 9'),
							_1: {ctor: '[]'}
						},
						_user$project$DesiredRoute$bg),
					_1: {ctor: '[]'}
				});
		default:
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Battle Mode'),
					_1: {ctor: '[]'}
				});
	}
};
var _user$project$DesiredRoute$update = F2(
	function (_p3, model) {
		return A2(
			_elm_lang$core$Platform_Cmd_ops['!'],
			model,
			{
				ctor: '::',
				_0: _elm_lang$core$Platform_Cmd$none,
				_1: {ctor: '[]'}
			});
	});
var _user$project$DesiredRoute$elmLoaded = _elm_lang$core$Native_Platform.outgoingPort(
	'elmLoaded',
	function (v) {
		return v;
	});
var _user$project$DesiredRoute$abxyPressed = _elm_lang$core$Native_Platform.incomingPort('abxyPressed', _elm_lang$core$Json_Decode$int);
var _user$project$DesiredRoute$BattleMode = {ctor: 'BattleMode'};
var _user$project$DesiredRoute$SearchMode = {ctor: 'SearchMode'};
var _user$project$DesiredRoute$init = A2(
	_elm_lang$core$Platform_Cmd_ops['!'],
	_user$project$DesiredRoute$SearchMode,
	{
		ctor: '::',
		_0: _user$project$DesiredRoute$elmLoaded('loaded'),
		_1: {ctor: '[]'}
	});
var _user$project$DesiredRoute$TitleMode = {ctor: 'TitleMode'};
var _user$project$DesiredRoute$ButtonY = {ctor: 'ButtonY'};
var _user$project$DesiredRoute$ButtonX = {ctor: 'ButtonX'};
var _user$project$DesiredRoute$ButtonB = {ctor: 'ButtonB'};
var _user$project$DesiredRoute$ButtonA = {ctor: 'ButtonA'};
var _user$project$DesiredRoute$ChangeButton = function (a) {
	return {ctor: 'ChangeButton', _0: a};
};
var _user$project$DesiredRoute$subscriptions = function (_p4) {
	return _user$project$DesiredRoute$abxyPressed(_user$project$DesiredRoute$ChangeButton);
};
var _user$project$DesiredRoute$main = _elm_lang$html$Html$program(
	{init: _user$project$DesiredRoute$init, view: _user$project$DesiredRoute$view, update: _user$project$DesiredRoute$update, subscriptions: _user$project$DesiredRoute$subscriptions})();
